# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  # before_all do
  ## will be provided via Azure env variables
  #  ENV["SLACK_URL"] = "https://hooks.slack.com/services/xxx"
  # end  

  desc "Runs all the tests"
  lane :runTests do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    #crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
    upload_to_slack()
    slack(message: "[ANDROID] Success! :)", success: true)
  end

  desc "Upload APK to Slack channel"
  private_lane :upload_to_slack do |options|
    file_path = lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
    file_name = file_path.gsub(/\/.*\//,"")
    access_token = ENV["SLACK_ACCESS_TOKEN"] #will be provided via Azure env variables
    channel_name = "pipeline"

    # sh "echo access_token => " + access_token
    # sh "echo slack_url => " + ENV["SLACK_URL"]
    # sh "echo file_name => " + file_name
    # sh "echo file_path => " + file_path
    sh "echo Uploading " + file_name + " to Slack"
    sh "curl https://slack.com/api/files.upload -F token=\"" + access_token + "\" -F channels=\"" + channel_name + "\" -F title=\"" + file_name + "\" -F filename=\"" + file_name + "\" -F file=@" + file_path
  end

  # desc "Deploy a new version to the Google Play"
  # lane :deploy do
  #   gradle(task: "clean assembleRelease")
  #   upload_to_play_store
  # end

  error do |lane, exception|
    slack(
      message: exception.message,
      success: false
      )
  end
end
